= stylesheet_link_tag 'network'

:plain 
  <canvas id="canvas" width="1600px" height="1400px"></canvas>

.scenarios
  - @scenarios.each do |scenario|
    .scenario_object{ :id => "scenario_#{scenario.id}", :style => "left: #{scenario.left}px; top: #{scenario.top}px" }
      = scenario.title
.tags
  - @scenarios.collect{|s| s.tags}.flatten.uniq.each do |tag|
    .tag_object{ :id => "tag_#{tag.id}", :style => "left: #{tag.left}px; top: #{tag.top}px;" }
      = tag.name

  
-#%ul.features
  %li= link_to 'Show', scenario
  %li= link_to 'Edit', edit_scenario_path(scenario)
  %li= button_to 'Destroy', scenario_path(scenario),  :confirm => 'Are you sure?', :method => :delete

:javascript 
  var canvas = $('#canvas')[0]
  var ctx = canvas.getContext('2d');

  function connect(scen, tag) { 
    scen = $(scen);
    tag = $(tag);
    ctx.beginPath();
    ctx.moveTo(scen.offset().left + scen.width()/2, scen.offset().top + scen.height()/2);
    ctx.lineTo(tag.offset().left + tag.width()/2, tag.offset().top + tag.height()/2);
    ctx.stroke();
  }

  #{@scenarios.collect { |scenario| scenario.tags.collect { |tag| "connect('#scenario_" + scenario.id.to_s + "', '#tag_" + tag.id.to_s + "');" } } }

  function update_canvas() {
    canvas.width = canvas.width;
    #{@scenarios.collect { |scenario| scenario.tags.collect { |tag| "connect('#scenario_" + scenario.id.to_s + "', '#tag_" + tag.id.to_s + "');" } } }
    console.log("I tried");
  }

  $('.scenario_object, .tag_object').draggable({
    drag: function(e,ui) { update_canvas(); },
    stop: function(e, ui) { 
      var type = '', id = '', url = '', post_data = '';

      // determine which type of element we are dragging
      type = ui.helper.attr('class').match(/([^ ]+)_object/)[1]

      id = ui.helper.attr('id').replace(type+'_', '');

      url = '/' + type + 's/' + id + '.json';
      post_data = "_method=put" +
                  "&" + type + "[left]=" + ui.offset.left +
                  "&" + type + "[top]=" + ui.offset.top;

      $.post(url, post_data, function(d,t){
        window.r = d;console.log(d);
        update_canvas();
      });
    }
  });




= link_to 'New Scenario', new_scenario_path
